<Coin.fees>: [uid] .
<Coin.makers>: [uid] @reverse .
<Coin.name>: string @index(exact) @upsert .
<Coin.network>: string @index(exact) .
<Coin.swaps>: [uid] @reverse .
<Coin.takers>: [uid] @reverse .
<Coin.testnet>: bool @index(bool) .
<Coin.transactions>: [uid] @reverse .
<Coin.usd_price>: [uid] .
<Fee.amount>: float @index(float) .
<Fee.coin>: uid @reverse .
<Fee.name>: string @index(exact) .
<Fee.paid_from_trading_vol>: bool @index(bool) .
<Fee.pubkey>: uid .
<Fee.swap>: uid .
<Fee.usd_price>: uid .
<Gui.makers>: [uid] @reverse .
<Gui.name>: string @index(exact) @upsert .
<Gui.pubkeys>: [uid] @reverse .
<Gui.swaps>: [uid] @reverse .
<Gui.takers>: [uid] @reverse .
<Maker.coin>: uid @reverse .
<Maker.confs>: int @index(int) .
<Maker.gui>: uid .
<Maker.nota>: bool @index(bool) .
<Maker.payment_lock>: int @index(int) .
<Maker.pubkey>: uid .
<Maker.swap>: uid .
<Maker.version>: uid .
<Pubkey.coins>: [uid] @reverse .
<Pubkey.fees>: [uid] .
<Pubkey.guis>: [uid] @reverse .
<Pubkey.makers>: [uid] @reverse .
<Pubkey.name>: string @index(exact) @upsert .
<Pubkey.swaps>: [uid] @reverse .
<Pubkey.takers>: [uid] @reverse .
<Pubkey.versions>: [uid] @reverse .
<Sdk.makers>: [uid] @reverse .
<Sdk.name>: string @index(exact) @upsert .
<Sdk.pubkeys>: [uid] @reverse .
<Sdk.swaps>: [uid] @reverse .
<Sdk.takers>: [uid] @reverse .
<SpotPrice.price>: float @index(float) .
<SpotPrice.timestamp>: int @index(int) .
<Swap.ended_at>: int @index(int) .
<Swap.events>: [uid] .
<Swap.fees>: [uid] .
<Swap.maker>: uid .
<Swap.result>: string @index(exact) .
<Swap.started_at>: int @index(int) .
<Swap.taker>: uid .
<Swap.transactions>: [uid] @reverse .
<Swap.uuid>: string @index(exact) @upsert .
<SwapEvent.name>: string .
<SwapEvent.swap>: uid .
<SwapEvent.timestamp>: int .
<Taker.coin>: uid @reverse .
<Taker.confs>: int @index(int) .
<Taker.gui>: uid @reverse .
<Taker.nota>: bool @index(bool) .
<Taker.payment_lock>: int @index(int) .
<Taker.pubkey>: uid @reverse .
<Taker.swap>: uid @reverse .
<Taker.version>: uid .
<Transaction.amount>: float @index(float) .
<Transaction.coin>: uid .
<Transaction.name>: string @index(exact) @upsert .
<Transaction.swap>: uid .
<Transaction.tx_type>: string @index(exact) .
<Transaction.usd_price>: uid .
<amount>: float @index(float) .
<coin>: uid @reverse .
<dgraph.drop.op>: string .
<dgraph.graphql.p_query>: string @index(sha256) .
<dgraph.graphql.schema>: string .
<dgraph.graphql.xid>: string @index(exact) @upsert .
<ended_at>: int @index(int) .
<events>: [uid] .
<name>: string @index(term) .
<result>: string @index(exact) .
<started_at>: int @index(int) .
<swap>: uid @reverse .
<testnet>: bool .
<timestamp>: int @index(int) .
<transactions>: [uid] @reverse .
<tx_type>: string .
<uuid>: string @index(exact) .
type <Coin> {
	Coin.name
	Coin.usd_price
	Coin.network
	Coin.testnet
	Coin.swaps
	Coin.transactions
	Coin.makers
	Coin.takers
	Coin.fees
}
type <Fee> {
	Fee.name
	Fee.coin
	Fee.pubkey
	Fee.usd_price
	Fee.amount
	Fee.paid_from_trading_vol
	Fee.swap
}
type <Gui> {
	Gui.name
	Gui.swaps
	Gui.pubkeys
	Gui.makers
	Gui.takers
}
type <Maker> {
	Maker.payment_lock
	Maker.confs
	Maker.nota
	Maker.pubkey
	Maker.coin
	Maker.gui
	Maker.version
	Maker.swap
}
type <Pubkey> {
	Pubkey.name
	Pubkey.guis
	Pubkey.versions
	Pubkey.swaps
	Pubkey.makers
	Pubkey.takers
	Pubkey.coins
	Pubkey.fees
}
type <Sdk> {
	Sdk.name
	Sdk.swaps
	Sdk.pubkeys
	Sdk.makers
	Sdk.takers
}
type <SpotPrice> {
	SpotPrice.timestamp
	SpotPrice.price
}
type <Swap> {
	Swap.uuid
	Swap.maker
	Swap.taker
	Swap.events
	Swap.transactions
	Swap.fees
	Swap.result
	Swap.started_at
	Swap.ended_at
}
type <SwapEvent> {
	SwapEvent.name
	SwapEvent.timestamp
	SwapEvent.swap
}
type <Taker> {
	Taker.payment_lock
	Taker.confs
	Taker.nota
	Taker.pubkey
	Taker.coin
	Taker.gui
	Taker.version
	Taker.swap
}
type <Transaction> {
	Transaction.name
	Transaction.usd_price
	Transaction.amount
	Transaction.tx_type
	Transaction.swap
	Transaction.coin
}
type <dgraph.graphql> {
	dgraph.graphql.schema
	dgraph.graphql.xid
}
type <dgraph.graphql.persisted_query> {
	dgraph.graphql.p_query
}